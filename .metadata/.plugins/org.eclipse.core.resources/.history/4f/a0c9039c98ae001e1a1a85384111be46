package Main;

import Data.CharPoint;
import Data.Create;
import Data.MapData;
import Util.Ci;
import Util.Cw;

public class ActionMove {
	
	public static void moveRun() {
		MapData.mapList.get(Create.playerMap).mapInfo();
		w:while(true) {
			Cw.wn();
			Cw.wn("[◀후진 / 전진▶/ 메뉴]");
			Cw.wn();
			
			String cmd = Ci.r("행동입력");
			switch(cmd) {
			case "전진":
				Create.playerMap++;
				if(MapData.checkingPlayerMap(Create.playerMap)) {
					Cw.wn("앞으로 한칸 진행했습니다.");
					MapData.mapList.get(Create.playerMap).mapInfo();
				}else {
					Create.playerMap--;
					Cw.wn("막혀있습니다.");
					MapData.mapList.get(Create.playerMap).mapInfo();
				}
				break;
			case "후진":
				Create.playerMap--;
				if(MapData.checkingPlayerMap(Create.playerMap)) {
					Cw.wn("뒤로 한칸 진행했습니다.");
					MapData.mapList.get(Create.playerMap).mapInfo();
				}else {
					Create.playerMap++;
					Cw.wn("막혀있습니다.");
					MapData.mapList.get(Create.playerMap).mapInfo();
				}
				break;
			case "메뉴":
				break w;
			}
		}
	}
	
	public static void moveRun2() {
		MapData.mapList.get(Create.playerMap).mapInfo();
		w:while(true) {
			Cw.wn();
			Cw.wn("[    ▲위로        ]");
			Cw.wn("[◀좌측 / 우측▶/ 메뉴]");
			Cw.wn("[    ▼아래        ]");
			Cw.wn();
			
			String cmd = Ci.r("행동입력");
			switch(cmd) {
			case "위로":
				move("top");
				break;
			case "아래":
				move("bottom");
				break;
			case "좌측":
				move("left");
				break;
			case "우측":
				move("right");
				break;
			}
		}
	}
	
	private static void move(String direction) {
		int currentPos = Create.playerMap;
	    CharPoint charPoint = Create.charPin.get(Create.playerPoint);

	    int newMap = -1; // 이동한 맵의 serialNumber

	    for (MapData map : MapData.mapList) {
	        if (MapData.checkingPlayerMap(currentPos - 1) && direction.equals("top") &&
	                charPoint.charTop == map.bottom) {
	            newMap = currentPos - 1;
	            break;
	        } else if (MapData.checkingPlayerMap(currentPos + 1) && direction.equals("bottom") &&
	                charPoint.charBottom == map.top) {
	            newMap = currentPos + 1;
	            break;
	        } else if (MapData.checkingPlayerMap(currentPos - 1) && direction.equals("left") &&
	                charPoint.charLeft == map.right) {
	            newMap = currentPos - 1;
	            break;
	        } else if (MapData.checkingPlayerMap(currentPos + 1) && direction.equals("right") &&
	                charPoint.charRight == map.left) {
	            newMap = currentPos + 1;
	            break;
	        }
	    }

	    if (newMap != -1) {
	        Cw.wn("이동했습니다. 새로운 맵으로 이동합니다.");
	        Create.playerMap = newMap;
	        MapData.mapList.get(Create.playerMap).mapInfo();
	    } else {
	        Cw.wn("이동할 수 없습니다.");
	    }
	}
}
